# upstream backend {
# upstream backend {
# server backend:8000;
# }
# server {
#     listen 80;
#     server_name koode.tks;

#     # location = /favicon.ico { access_log off log_not_found off }
#     location /{
#         # root /var/www/frontend;
#         root /usr/share/nginx/html;
#         try_files $uri $uri/ /index.html;
#     }

#     location /api/ {
#         proxy_pass http://backend;
#         #proxy_pass http://unix:/home/sammy/myproject/myproject.sock;
# 	    proxy_set_header Host $http_host;
#     }

#     # Serve media files
#     location /media/ {
#         alias /mediafiles/;
#         autoindex on;
#     }
# }


# worker_processes 1;

# events {
#   worker_connections 1024;
# }

# http {
#   sendfile on;
#   gzip on;

upstream backend {
  server backend:8000;
}

upstream frontend {
  server frontend:3000;
}

server {
  listen 80;
  listen 443 ssl;  # Add this line for HTTPS

  ssl_certificate /etc/nginx/ssl/cert.crt;  # Path to your SSL certificate file
  ssl_certificate_key /etc/nginx/ssl/private.key;  # Path to your private key file

  location / {
    proxy_pass http://frontend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /api {
    proxy_pass http://backend;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /router {
    proxy_pass http://frontrouter:5000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /api/response {
    proxy_pass http://chatgpt:8001;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

